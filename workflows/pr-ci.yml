name: PR CI

on:
  pull_request:
    # Fire when a PR is opened, updated (new commits), re-opened, or marked ready
    types: [opened, synchronize, reopened, ready_for_review]
    # Only when targeting main (adjust as needed)
    branches: [ main ]
    # Optional: only run when relevant files change
    # paths: [ "src/**", ".github/workflows/**" ]

permissions:
  contents: read        # least-privilege default
  # pull-requests: write  # only if you want to comment on the PR, otherwise remove

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build-and-test:
    # Skip draft PRs (remove if you want drafts to run)
    if: ${{ github.event.pull_request.draft == false }}

    # Target your self-hosted runner by labels (and optionally group)
    # Option A: labels only
    runs-on: [self-hosted, ci]
    # Option B (if you use runner groups), uncomment and set your group:
    # runs-on:
    #   group: my-self-hosted-group
    #   labels: [self-hosted, ci]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Example: Node project (adjust for your stack)

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Virtual Environment
        run: python3 -m venv venv && source ./venv/Scripts/activate

      - name: Install dependencies
        run: |
          if (Test-Path "requirements.txt") { python -m pip install -r requirements.txt }
          if (Test-Path "requirements-dev.txt") { python -m pip install -r requirements-dev.txt }
          # Poetry? Uncomment:
          # python -m pip install poetry
          # poetry install --no-interaction --no-ansi

      - name: Lint (ruff)
        run: |
          pip install ruff
          ruff --version
          ruff check .

      - name: Type check (mypy)  # optional
        run: |
          pip install mypy
          mypy --install-types --non-interactive || true
          mypy .

      - name: Run tests (pytest + coverage)
        run: |
          python -m pip install pytest pytest-cov
          if (-not (Test-Path "reports")) { New-Item -ItemType Directory -Path "reports" | Out-Null }
          pytest -q `
            --cov=. --cov-report=xml:reports/coverage.xml `
            --junitxml=reports/junit.xml

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: python-test-reports-py${{ matrix.python-version }}
          path: reports/
